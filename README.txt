Скрипт script.py предназначен для подготовки данных в формате, понятном утилите word2vecf из корпуса текстов на английском языке.
Формат был определен экспериментально с помощью входящих в состав word2vecf утилит и скриптов, обрабатывающих conll-u формат, и имеет вид:
"слово" пробел "контекст"
Для получения контекста и построения синтаксического дерева используется библиотека spaCy.
Считывание текста из файла происходит построчно. Каждая строка делится на предложения. Далее для каждого слова определяется контекст.
Контекст слова имеет вид:
child/dep_head/dep-1
где child - потомки данного слова в синтаксическом дереве (может быть несколько), dep - синтаксическая связь слова с потомком
head - родитель слова в синтаксическом дереве, dep-1 - синтакскическа связь слова с родитилем
Также реалзизована "склейка" контекстов зависимых слов для синтаксической связи prep (предлог) также как в статье.

Использование скрипта:
script.py --in <входной файл> --out <выходной файл>
Параметры по умолчанию: 
--in corpus.txt
--out dep.contexts 

Для удобства демонстрации все завернуто в докер. Из него же можно узнать какие команды надо выполнить в ubuntu, чтобы создать окружение

1. Билдинг контейнера: 
docker build -t task_w2vf . 

2. Запуск: 
docker run -it -v $pwd/share:/root/share task_w2vf 
С помощью папки /share можно размещать файлы в контейнере, т.о. не будет необходимости в пересборке контейнера для каждого нового теста. 
Если с общей папкой возникает ошибка, запуск осуществлять так: 
docker run -it task_w2vf 

3. После запуска контейнера перейти в папку рут
cd root

4. Запустить тестовый пример
./run_task.sh

Тестовый пример включает в себя исполнение следующих команд:

4.1 Извлечение контекстов с помощью Spacy: 
python3 script.py —-in corpus.txt —-out dep.contexts 

4.2 Получение словарей контекстов (cv) и словаря слов (wv) из файла контекстов dep.contexts для слов, встречающихся не менее 1 раза:
./yoavgo-word2vecf-0d8e19d2f2c6/count_and_filter -train dep.contexts -cvocab cv -wvocab wv -min-count 1 

4.3 Обучение:
 ./yoavgo-word2vecf-0d8e19d2f2c6/word2vecf -train dep.contexts -wvocab wv -cvocab cv -output dim200vecs -size 200 -negative 15 -threads 10
Параметр -size задает размер векторных представлений. Обучение происходит на основе словарей wv и cw. Контексты, не попавшие из dep.contexts в словари, игнорируются. Выходом является утилиты файл dim200vecs, содержащий обученные 200-мерные векторные представления слов.

4.4 Преобразование полученных векторных представлений в формат понятный NumPy (при необходимости):
python ./yoavgo-word2vecf-0d8e19d2f2c6/scripts/vecs2nps.py dim200vecs vecs
